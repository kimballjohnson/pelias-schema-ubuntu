{
  "name": "pelias-config",
  "author": {
    "name": "mapzen"
  },
  "version": "0.0.4",
  "description": "Configuration settings for Pelias",
  "homepage": "https://github.com/pelias/config",
  "license": "MIT",
  "main": "index.js",
  "scripts": {
    "test": "node test/run.js | tap-spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pelias/config.git"
  },
  "keywords": [
    "pelias",
    "config"
  ],
  "bugs": {
    "url": "https://github.com/pelias/config/issues"
  },
  "engines": {
    "node": ">=0.10.26",
    "npm": ">=1.4.3",
    "elasticsearch": ">=1.1.1"
  },
  "dependencies": {
    "mergeable": "0.0.0"
  },
  "devDependencies": {
    "tape": "^2.13.4",
    "tap-spec": "^0.2.0"
  },
  "readme": "## Installation\n\n```bash\n$ npm install pelias-config\n```\n\n[![NPM](https://nodei.co/npm/pelias-config.png?downloads=true&stars=true)](https://nodei.co/npm/pelias-config)\n\n## Usage\n\nCreate a new Pelias config:\n\n```javascript\nvar config = require('pelias-config');\n\n// use the default settings\nvar settings = config.defaults;\n```\n\n#### development settings\n\n```javascript\nvar config = require('pelias-config');\n\n// generate development specific settings\nvar settings = config.generate();\n```\n\n#### production settings\n\nsysadmin and ops engineers can override the default settings on the server by launching any code which requires this module by supplying an ENV var with the path to their custom json config.\n\n```bash\n$ PELIAS_CONFIG=/path/to/settings/file.json node app.js\n```\n\nNote: by default the merge is shallow (it simply replaces the defaults with any top-level properties which are present in the env config, leaving the rest unchanged).\nThe developer can enable deep merging; however that isn't recommended as the env config will have to be modified every time the app config changes.\n\n```javascript\nvar config = require('pelias-config');\n\n// shallow merge config settings from a path supplied in the env var\nvar settings = config.generate();\n\n// deep merge config settings from a path supplied in the env var\nvar settings = config.generate( true );\n```\n\nYou can test the result of merging your env config with the following bash oneliner:\n```bash\nnpm install pelias-config; \\\nPELIAS_CONFIG=/path/config.json \\\nnode -e \"console.log( require('pelias-config').generate().stringify() );\";\n```\n\n### Exporting & Debugging\n\nThe generated config will be a [mergeable](https://github.com/pelias/mergeable) object:\n\n```javascript\nvar config = require('pelias-config'),\n    settings = config.generate();\n\n// strip out all functions etc and produce a plain js object copy\nvar copy = settings.export();\n```\n\nYou can pretty print the generated config:\n\n```javascript\nvar config = require('pelias-config'),\n    settings = config.generate();\n\nconsole.log( settings.stringify() );\n```\n\nsee https://github.com/pelias/mergeable for a full list of methods\n\n## NPM Module\n\nThe `pelias-config` npm module can be found here:\n\n[https://npmjs.org/package/pelias-config](https://npmjs.org/package/pelias-config)\n\n## Contributing\n\nPlease fork and pull request against upstream master on a feature branch.\n\nPretty please; provide unit tests and script fixtures in the `test` directory.\n\n### Running Unit Tests\n\n```bash\n$ npm test\n```\n\n### Continuous Integration\n\nTravis tests every release against node version `0.10`\n\n[![Build Status](https://travis-ci.org/pelias/config.png?branch=master)](https://travis-ci.org/pelias/config)",
  "readmeFilename": "README.md",
  "_id": "pelias-config@0.0.4",
  "dist": {
    "shasum": "744c9cd6fd0008240eef16aa4d0e0186b44070db"
  },
  "_from": "pelias-config@^0.0.4",
  "_resolved": "https://registry.npmjs.org/pelias-config/-/pelias-config-0.0.4.tgz"
}
